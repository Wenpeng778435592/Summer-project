
class SemiCircularProgressBar extends CustomPainter {
  bool isBackground;
  double calories;
  double targetCalories;
  Color progressColor;
  double arc;

  ProgressArc(double calories, double targetCalories, Color progressColor) {
    this.calories = calories;
    this.targetCalories = targetCalories;
    this.progressColor = progressColor;
    this.isBackground = isBackground;

    if (calories != null) {
      this.arc = (calories / targetCalories) * (math.pi - 0.4);
    }
  }

  @override
  void paint(Canvas canvas, Size size) {
    final rect = Rect.fromLTRB(0, 0, 300, 300);
    final startAngle = -(math.pi - 0.2);
    final sweepAngle = (arc == null || arc > math.pi - 0.4) ? math.pi - 0.4 : arc;
    final userCenter = false;
    final paint = Paint()
      ..strokeCap = StrokeCap.round
      ..color = progressColor
      ..style = PaintingStyle.stroke
      ..strokeWidth = 8;

    canvas.drawArc(rect, startAngle, sweepAngle, userCenter, paint);
  }

  @override
  bool shouldRepaint(covariant CustomPainter oldDelegate) {
    // TODO: implement shouldRepaint
    return true;
  }
}